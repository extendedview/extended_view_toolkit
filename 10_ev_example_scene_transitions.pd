#N canvas 419 22 944 756 10;
#X declare -path . -path .. -path data -path ../data -path ev-in -path
../ev-in -path ev-main -path ../ev-main -path ev-pano -path ../ev-pano
-path ev-pro -path ../ev-pro -path libs/gil -path ../libs/gil -path
libs/kollabs -path ../libs/kollabs -path media -path ../media -path
ev-glsl -path ../ev-glsl -lib Gem;
#X obj 14 -26 cnv 15 700 30 empty empty Example:_scene_transitions
20 12 0 14 -233017 -66577 0;
#X obj 13 281 cnv 15 910 30 empty empty INITIALIZE 20 12 0 14 -261234
-66577 0;
#N canvas 579 25 509 161 init 0;
#X obj 44 27 cnv 15 400 100 empty empty IMPORTANT 20 12 0 14 -261234
-66577 0;
#X text 49 47 Such a declare object should always be in the main patch
of your project \, to set the pathes to the abstractions.;
#X obj 158 93 ev-main/ev_declare;
#X restore 752 -22 pd init;
#X obj 13 84 cnv 15 450 190 empty empty Patch_domain_"main" 280 12
0 14 -262130 -66577 0;
#X obj 23 92 gemhead 50;
#X obj 473 84 cnv 15 450 190 empty empty Patch_domain_"special" 20
12 0 14 -262130 -66577 0;
#X obj 14 318 cnv 15 450 350 empty empty Storage_domain_"main" 20 12
0 14 -204800 -66577 0;
#X obj 474 318 cnv 15 450 350 empty empty Storage_domain_"special"
20 12 0 14 -204800 -66577 0;
#X text 488 344 Here \, domain "special" is specified by first creation
argument.;
#X obj 611 145 gemhead 51;
#X text 26 351 Here \, domain "main" is specified by first creation
argument.;
#X msg 247 430 0;
#X msg 277 430 1;
#X msg 307 430 2;
#X text 187 403 Change scene by clicking these message boxes;
#X obj 247 472 s /ds/main/scene;
#X msg 711 429 0;
#X msg 741 429 1;
#X msg 771 429 2;
#X text 651 402 Change scene by clicking these message boxes;
#X obj 711 471 s /ds/special/scene;
#X obj 23 121 ev_pro_22easy projection_a main;
#X obj 611 174 ev_pro_22easy projection_b special;
#N canvas 0 22 493 355 load_preset_files 0;
#X obj 57 41 loadbang;
#X obj 37 41 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 57 65 del 1000;
#X obj 57 87 t b b;
#X obj 57 221 del 2000;
#X msg 57 244 \; /ds/main/scene 0 \; /ds/special/scene 0 \;;
#X text 145 43 Both domains must be initialized to get automatically
loaded on startup.;
#X msg 84 115 \; /ds/main/loadfile ../../data/ev_example_scene_transitions_main.txt
\; /ds/special/loadfile ../../data/ev_example_scene_transitions_special.txt
\;;
#X text 130 188 (pathes relative to "./libs/kollabs");
#X connect 0 0 2 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 3 1 7 0;
#X connect 4 0 5 0;
#X coords 0 355 1 354 85 60 0;
#X restore 163 287 pd load_preset_files;
#X obj 14 8 cnv 15 910 70 empty empty General 20 12 0 14 -232576 -66577
0;
#X text 129 13 In this example \, a scene transition is introduced
for domain "special".;
#X obj 14 677 cnv 15 910 25 empty empty Look_at_"./libs/kollabs/ds_help.pd"_for_more_information_on_state-saving_and_transitions
20 12 0 14 -258113 -1 0;
#X obj 23 188 ev_gemwin main;
#X text 129 45 The following steps show \, how scene transitions work
and how to get them.;
#X text 519 9 IMPORTANT NOTE \; A transition is saved with the DESTINATION
value. So \, if a fade between scene 3 and 4 is desired \, it needs
to be set in scene 4 \; Transitions only have influence on variables
of type float.;
#X text 477 -26 (c)2013 Marian Weger \; /part of EXTENDED VIEW toolkit/
gpl v3;
#X obj 484 546 ds_transition special;
#X obj 484 572 ds_transition_gui special;
#X obj 27 400 ds_gui main;
#X obj 27 377 ds_logic main;
#X obj 485 380 ds_logic special;
#X obj 485 402 ds_gui special;
#X text 621 543 transition module to enable scene transitions;
#X text 679 595 corresponding gui;
#X connect 4 0 21 0;
#X connect 9 0 22 0;
#X connect 11 0 15 0;
#X connect 12 0 15 0;
#X connect 13 0 15 0;
#X connect 16 0 20 0;
#X connect 17 0 20 0;
#X connect 18 0 20 0;
#X coords 0 0 1 1 85 60 0;
